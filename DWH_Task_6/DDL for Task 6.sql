-- since I had to rename the schema fully, I decided to recreate the schema and avoid altering tables by correctly inputing them in the first place

-- creating schema
BEGIN;
CREATE SCHEMA IF NOT EXISTS BL_3NF;
COMMIT;

-- creating sequences
BEGIN;
CREATE SEQUENCE IF NOT EXISTS BL_3NF.seq_address_id;
CREATE SEQUENCE IF NOT EXISTS BL_3NF.seq_customer_id;
CREATE SEQUENCE IF NOT EXISTS BL_3NF.seq_employee_id;
CREATE SEQUENCE IF NOT EXISTS BL_3NF.seq_branch_id;
CREATE SEQUENCE IF NOT EXISTS BL_3NF.seq_channel_id;
CREATE SEQUENCE IF NOT EXISTS BL_3NF.seq_date_id;
CREATE SEQUENCE IF NOT EXISTS BL_3NF.seq_category_id;
CREATE SEQUENCE IF NOT EXISTS BL_3NF.seq_subcategory_id;
CREATE SEQUENCE IF NOT EXISTS BL_3NF.seq_product_id;
CREATE SEQUENCE IF NOT EXISTS BL_3NF.seq_price_id;
COMMIT;

-- creating tables
BEGIN;
CREATE TABLE IF NOT EXISTS BL_3NF.CE_ADDRESSES (
    ADDRESS_ID      BIGINT PRIMARY KEY DEFAULT nextval('BL_3NF.seq_address_id'),
    ADDRESS_LINE    VARCHAR(100),
    CITY_NAME       VARCHAR(50),
    REGION_NAME     VARCHAR(50),
    POSTAL_CODE     VARCHAR(20),
    COUNTRY_NAME    VARCHAR(50),
    INSERT_DT       DATE,
    UPDATE_DT       DATE,
    SOURCE_SYSTEM   VARCHAR(100),
    SOURCE_ENTITY   VARCHAR(100)
);

CREATE TABLE IF NOT EXISTS BL_3NF.CE_BRANCHES (
    BRANCH_ID        BIGINT PRIMARY KEY DEFAULT nextval('BL_3NF.seq_branch_id'),
    BRANCH_SRC_ID    INT NOT NULL,
    BRANCH_NAME      VARCHAR(100),
    ADDRESS_ID       BIGINT REFERENCES BL_3NF.CE_ADDRESSES(ADDRESS_ID),
    INSERT_DT        DATE,
    UPDATE_DT        DATE,
    SOURCE_SYSTEM    VARCHAR(100),
    SOURCE_ENTITY    VARCHAR(100)
);

CREATE TABLE IF NOT EXISTS BL_3NF.CE_CHANNELS (
    CHANNEL_ID       BIGINT PRIMARY KEY DEFAULT nextval('BL_3NF.seq_channel_id'),
    CHANNEL_SRC_ID   INT NOT NULL,
    CHANNEL_NAME     VARCHAR(255),
    INSERT_DT        DATE,
    UPDATE_DT        DATE,
    SOURCE_SYSTEM    VARCHAR(100),
    SOURCE_ENTITY    VARCHAR(100)
);
COMMIT;

BEGIN;
CREATE TABLE IF NOT EXISTS BL_3NF.CE_CUSTOMERS (
    CUSTOMER_ID      BIGINT PRIMARY KEY DEFAULT nextval('BL_3NF.seq_customer_id'),
    CUSTOMER_SRC_ID  INT NOT NULL,
    CUSTOMER_NAME    VARCHAR(100),
    SEGMENT_NAME     VARCHAR(50),
    ADDRESS_ID       BIGINT REFERENCES BL_3NF.CE_ADDRESSES(ADDRESS_ID),
    INSERT_DT        DATE,
    UPDATE_DT        DATE,
    SOURCE_SYSTEM    VARCHAR(100),
    SOURCE_ENTITY    VARCHAR(100)
);

CREATE TABLE IF NOT EXISTS BL_3NF.CE_EMPLOYEES (
    EMPLOYEE_ID      BIGINT PRIMARY KEY DEFAULT nextval('BL_3NF.seq_employee_id'),
    EMPLOYEE_SRC_ID  INT NOT NULL,
    EMPLOYEE_NAME    VARCHAR(100),
    ROLE_NAME        VARCHAR(50),
    HIRE_DT          DATE,
    ADDRESS_ID       BIGINT REFERENCES BL_3NF.CE_ADDRESSES(ADDRESS_ID),
    INSERT_DT        DATE,
    UPDATE_DT        DATE,
    SOURCE_SYSTEM    VARCHAR(100),
    SOURCE_ENTITY    VARCHAR(100)
);
COMMIT;

BEGIN;
CREATE TABLE IF NOT EXISTS BL_3NF.CE_TIME_DAY (
    DATE_ID         BIGINT PRIMARY KEY DEFAULT nextval('BL_3NF.seq_date_id'),
    DATE_SRC_ID     DATE NOT NULL,
    YEAR_NO         INT,
    MONTH_NO        INT,
    DAY_NO          INT,
    WEEKDAY_NAME    VARCHAR(20),
    INSERT_DT       DATE,
    UPDATE_DT       DATE,
    SOURCE_SYSTEM   VARCHAR(100),
    SOURCE_ENTITY   VARCHAR(100)
);
COMMIT;

BEGIN;
CREATE TABLE IF NOT EXISTS BL_3NF.CE_PRODUCT_CATEGORIES (
    CATEGORY_ID       BIGINT PRIMARY KEY DEFAULT nextval('BL_3NF.seq_category_id'),
    CATEGORY_SRC_ID   VARCHAR(20) NOT NULL,
    CATEGORY_NAME     VARCHAR(100),
    INSERT_DT         DATE,
    UPDATE_DT         DATE,
    SOURCE_SYSTEM     VARCHAR(100),
    SOURCE_ENTITY     VARCHAR(100)
);

CREATE TABLE IF NOT EXISTS BL_3NF.CE_PRODUCT_SUBCATEGORIES (
    SUBCATEGORY_ID        BIGINT PRIMARY KEY DEFAULT nextval('BL_3NF.seq_subcategory_id'),
    SUBCATEGORY_SRC_ID    VARCHAR(20) NOT NULL,
    SUBCATEGORY_NAME      VARCHAR(100),
    CATEGORY_SRC_ID       VARCHAR(20),
    INSERT_DT             DATE,
    UPDATE_DT             DATE,
    SOURCE_SYSTEM         VARCHAR(100),
    SOURCE_ENTITY         VARCHAR(100)
);

CREATE TABLE IF NOT EXISTS BL_3NF.CE_PRODUCTS (
    PRODUCT_ID            BIGINT PRIMARY KEY DEFAULT nextval('BL_3NF.seq_product_id'),
    PRODUCT_SRC_ID        VARCHAR(30) NOT NULL,
    PRODUCT_NAME          VARCHAR(100),
    SUBCATEGORY_SRC_ID    VARCHAR(20) NOT NULL,
    LOSS_RATE_ACT         FLOAT,
    INSERT_DT             DATE,
    UPDATE_DT             DATE,
    SOURCE_SYSTEM         VARCHAR(100),
    SOURCE_ENTITY         VARCHAR(100)
);

CREATE TABLE IF NOT EXISTS BL_3NF.CE_PRODUCT_PRICES_SCD (
    PRICE_ID         BIGINT PRIMARY KEY DEFAULT nextval('BL_3NF.seq_price_id'),
    PRODUCT_ID       BIGINT REFERENCES BL_3NF.CE_PRODUCTS(PRODUCT_ID),
    PRICE_TYPE_NAME  VARCHAR(50),
    PRICE_AMT_ACT    FLOAT,
    START_DT         DATE,
    END_DT           DATE,
    IS_ACTIVE        VARCHAR(1),
    INSERT_DT        DATE,
    UPDATE_DT        DATE,
    SOURCE_SYSTEM    VARCHAR(100),
    SOURCE_ENTITY    VARCHAR(100)
);
COMMIT;

BEGIN;
CREATE TABLE IF NOT EXISTS BL_3NF.CE_SALES (
    DATE_ID          BIGINT REFERENCES BL_3NF.CE_TIME_DAY(DATE_ID),
    CUSTOMER_ID      BIGINT REFERENCES BL_3NF.CE_CUSTOMERS(CUSTOMER_ID),
    EMPLOYEE_ID      BIGINT REFERENCES BL_3NF.CE_EMPLOYEES(EMPLOYEE_ID),
    BRANCH_ID        BIGINT REFERENCES BL_3NF.CE_BRANCHES(BRANCH_ID),
    CHANNEL_ID       BIGINT REFERENCES BL_3NF.CE_CHANNELS(CHANNEL_ID),
    PRODUCT_ID       BIGINT REFERENCES BL_3NF.CE_PRODUCTS(PRODUCT_ID),
    PRICE_ID         BIGINT REFERENCES BL_3NF.CE_PRODUCT_PRICES_SCD(PRICE_ID),
    QUANTITY_NO      INT,
    UNIT_PRICE_ACT   FLOAT,
    DISCOUNT_ACT     FLOAT,
    AMOUNT_TOT_ACT   FLOAT,
    COST_ACT         FLOAT,
    GROSS_INCOME_ACT FLOAT
);
COMMIT;

